{"mappings":"qhBAuDA,IAAAA,EAAAC,EAAA,SA4BA,SAASC,EAAcC,EAAUC,GAC/B,MAAMC,EAAgBC,KAAKC,SAAW,GAChCC,EAAgB,C,SAAEL,E,MAAUC,GAElC,OAAO,IAAIK,SAAQ,CAACC,EAASC,KACvBN,GACFK,EAAQF,GAEVG,EAAOH,EAAc,G,CAlCZI,SAASC,cAAc,SAC/BC,iBAAiB,UAEtB,SAAsBC,GACpBA,EAAEC,iBAEF,IAAIC,EAAQC,OAAOH,EAAEI,cAAcf,MAAMgB,OACzC,MAAMC,EAAOH,OAAOH,EAAEI,cAAcE,KAAKD,OACnCE,EAASJ,OAAOH,EAAEI,cAAcG,OAAOF,OAE7C,IAAK,IAAIG,EAAW,EAAGA,GAAYD,EAAQC,GAAY,EACrDrB,EAAcqB,EAAUN,GACrBO,MAAK,EAACrB,SAAEA,EAAQC,MAAEA,MACjBqB,YAAW,KACTC,EAAA1B,GAAS2B,OAAOC,QAAQ,uBAAqBzB,QAAiBC,MAAU,GACvEA,EAAM,IAEVyB,OAAM,EAAC1B,SAAEA,EAAQC,MAAEA,MAClBqB,YAAW,KACTC,EAAA1B,GAAS2B,OAAOG,QAAQ,sBAAoB3B,QAAeC,MAAU,GACpEA,EAAM,IAEba,GAASI,C","sources":["src/js/03-promises.js"],"sourcesContent":["// import Notiflix from \"notiflix\";\n\n// const button = document.querySelector('button');\n\n// const onSubmitform = e => {\n//   e.preventDefault();\n\n//   const delayInput = document.querySelector('input[name=\"delay\"]').value;\n//   const stepInput = document.querySelector('input[name=\"step\"]').value;\n//   const amountInput = document.querySelector('input[name=\"amount\"]').value;\n\n//   let counter = 0;\n//   let intervalId = null;\n\n//   setInterval(() => {\n//     createPromise(counter, delayInput)\n//       .then(value => {\n//         Notiflix.Notify.success(value);\n//       })\n//       .catch(error => {\n//         Notiflix.Notify.failure(error);\n//       });\n    \n//     intervalId = setInterval(() => {\n//       counter++;\n\n//       if (counter + 1 === +amountInput) {\n//         clearInterval(intervalId);\n//       }\n//       createPromise(counter, +delayInput + stepInput * counter)\n//         .then(value => {\n//           Notiflix.Notify.success(value);\n//         })\n//         .catch(error => {\n//           Notiflix.Notify.failure(error);\n//         });\n//     }, stepInput);\n//   }, delayInput);\n// };\n  \n// button.addEventListener('click', onSubmitform)\n\n\n// function createPromise(position, delay) {\n//   return new Promise((resolve, reject) => {\n//     const shouldResolve = Math.random() > 0.3;\n//     if (shouldResolve) {\n//       resolve(`✅ Fulfilled promise ${position} in ${delay}ms`)\n//     }\n//     reject(`❌ Rejected promise ${position} in ${delay}ms`)\n//   }); \n// }\n\n\n\nimport Notiflix from \"notiflix\";\n\nconst form = document.querySelector('.form');\nform.addEventListener('submit', onSubmitForm);\n\nfunction onSubmitForm(e) {\n  e.preventDefault();\n\n  let delay = Number(e.currentTarget.delay.value);\n  const step = Number(e.currentTarget.step.value);\n  const amount = Number(e.currentTarget.amount.value);\n\n  for (let position = 1; position <= amount; position += 1) {\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        }, delay);\n      })\n      .catch(({ position, delay }) => {\n        setTimeout(() => {\n          Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        }, delay);\n      });\n    delay += step;\n  }\n}\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const objectPromise = { position, delay };\n\n  return new Promise((resolve, reject) => {\n    if (shouldResolve) {\n      resolve(objectPromise);\n    }\n    reject(objectPromise);\n  });\n}"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","shouldResolve","Math","random","objectPromise","Promise","resolve","reject","document","querySelector","addEventListener","e","preventDefault","delay1","Number","currentTarget","value","step","amount","position1","then","setTimeout","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.37e14175.js.map"}